{
  "version": 3,
  "sources": ["../src/core/index.ts", "../src/core/worker.ts", "../src/core/WaynWidget.ts"],
  "sourcesContent": ["import { WaynWidget } from './WaynWidget';\n\n// Register the custom element\nif (!customElements.get('wayn-widget')) {\n  customElements.define('wayn-widget', WaynWidget);\n}\n\n// Export for module usage\nexport { WaynWidget };\nexport type { WaynChallenge, ChallengeResponse, SolutionResponse } from '../types';\n\n// Global class for programmatic usage\nexport class Wayn {\n  private widget: WaynWidget;\n\n  constructor(config: {\n    api: string;\n    color?: 'light' | 'dark';\n    workerCount?: number;\n    container?: HTMLElement;\n    i18n?: {\n      initialState?: string;\n      verifying?: string;\n      verified?: string;\n      error?: string;\n    };\n  }) {\n    this.widget = document.createElement('wayn-widget') as WaynWidget;\n    \n    // Set attributes\n    this.widget.setAttribute('api', config.api);\n    if (config.color) {\n      this.widget.setAttribute('color', config.color);\n    }\n    if (config.workerCount) {\n      this.widget.setAttribute('worker-count', config.workerCount.toString());\n    }\n    if (config.i18n) {\n      if (config.i18n.initialState) {\n        this.widget.setAttribute('data-i18n-initial-state', config.i18n.initialState);\n      }\n      if (config.i18n.verifying) {\n        this.widget.setAttribute('data-i18n-verifying', config.i18n.verifying);\n      }\n      if (config.i18n.verified) {\n        this.widget.setAttribute('data-i18n-verified', config.i18n.verified);\n      }\n      if (config.i18n.error) {\n        this.widget.setAttribute('data-i18n-error', config.i18n.error);\n      }\n    }\n\n    // Append to container or hide it for programmatic usage\n    if (config.container) {\n      config.container.appendChild(this.widget);\n    } else {\n      this.widget.style.display = 'none';\n      document.body.appendChild(this.widget);\n    }\n  }\n\n  // Event listeners\n  public onSolve(callback: (token: string) => void): void {\n    this.widget.addEventListener('wayn:solve', (event: Event) => {\n      const customEvent = event as CustomEvent;\n      callback(customEvent.detail.token);\n    });\n  }\n\n  public onProgress(callback: (progress: number) => void): void {\n    this.widget.addEventListener('wayn:progress', (event: Event) => {\n      const customEvent = event as CustomEvent;\n      callback(customEvent.detail.progress);\n    });\n  }\n\n  public onError(callback: (error: string) => void): void {\n    this.widget.addEventListener('wayn:error', (event: Event) => {\n      const customEvent = event as CustomEvent;\n      callback(customEvent.detail.error);\n    });\n  }\n\n  public onReset(callback: () => void): void {\n    this.widget.addEventListener('wayn:reset', callback);\n  }\n\n  // Public methods\n  public get token(): string | null {\n    return this.widget.token;\n  }\n\n  public get isVerified(): boolean {\n    return this.widget.isVerified;\n  }\n\n  public reset(): void {\n    this.widget.resetWidget();\n  }\n\n  public destroy(): void {\n    if (this.widget.parentNode) {\n      this.widget.parentNode.removeChild(this.widget);\n    }\n  }\n}\n\n// Make it available globally for CDN usage\ndeclare global {\n  interface Window {\n    Wayn: typeof Wayn;\n    WaynWidget: typeof WaynWidget;\n  }\n}\n\nif (typeof window !== 'undefined') {\n  window.Wayn = Wayn;\n  window.WaynWidget = WaynWidget;\n}\n", "import { WaynChallenge } from '../types';\n\n/**\n * Creates a Web Worker for solving PoW challenges\n */\nexport function createWorker(): Worker {\n  const workerScript = `\n    // PoW Worker for Wayn CAPTCHA\n    let wasmModule = null;\n    \n    async function loadWasm(wasmUrl) {\n      if (wasmModule) return wasmModule;\n      \n      try {\n        // Import the WASM module\n        const wasmImport = await import(wasmUrl);\n        await wasmImport.default();\n        wasmModule = wasmImport;\n        return wasmModule;\n      } catch (error) {\n        console.error('Failed to load WASM:', error);\n        throw error;\n      }\n    }\n    \n    async function solveChallenge(salt, target) {\n      let nonce = 0;\n      const maxIterations = 1000000; // Prevent infinite loops\n      \n      // Simple PoW implementation (you'll need to replace this with your actual WASM implementation)\n      while (nonce < maxIterations) {\n        const input = salt + nonce.toString();\n        const hash = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(input));\n        const hashArray = new Uint8Array(hash);\n        \n        // Check if hash meets target difficulty\n        let leadingZeros = 0;\n        for (let i = 0; i < hashArray.length; i++) {\n          if (hashArray[i] === 0) {\n            leadingZeros += 8;\n          } else {\n            leadingZeros += Math.clz32(hashArray[i]) - 24;\n            break;\n          }\n        }\n        \n        if (leadingZeros >= target) {\n          return nonce;\n        }\n        \n        nonce++;\n      }\n      \n      throw new Error('Failed to solve challenge within iteration limit');\n    }\n    \n    self.onmessage = async function(e) {\n      const { salt, target, wasmUrl } = e.data;\n      \n      try {\n        if (wasmUrl) {\n          await loadWasm(wasmUrl);\n        }\n        \n        const nonce = await solveChallenge(salt, target);\n        \n        self.postMessage({\n          found: true,\n          nonce: nonce\n        });\n      } catch (error) {\n        self.postMessage({\n          found: false,\n          error: error.message\n        });\n      }\n    };\n  `;\n\n  const blob = new Blob([workerScript], { type: 'application/javascript' });\n  return new Worker(URL.createObjectURL(blob));\n}\n\n/**\n * Solves PoW challenges using Web Workers\n */\nexport async function solveChallenges(\n  challenges: WaynChallenge[],\n  workerCount: number = navigator.hardwareConcurrency || 4,\n  onProgress?: (progress: number) => void,\n  wasmUrl?: string\n): Promise<Array<[string, number, number]>> {\n  const workers: Worker[] = [];\n  const results: Array<[string, number, number]> = [];\n  let completed = 0;\n  const total = challenges.length;\n\n  // Create workers\n  for (let i = 0; i < Math.min(workerCount, challenges.length); i++) {\n    workers.push(createWorker());\n  }\n\n  const solveSingleChallenge = (challenge: WaynChallenge, workerId: number): Promise<[string, number, number]> => {\n    return new Promise((resolve, reject) => {\n      const worker = workers[workerId];\n      \n      const timeout = setTimeout(() => {\n        worker.terminate();\n        workers[workerId] = createWorker();\n        reject(new Error('Worker timeout'));\n      }, 30000);\n\n      worker.onmessage = (event) => {\n        const { found, nonce, error } = event.data;\n        \n        clearTimeout(timeout);\n        \n        if (found) {\n          completed++;\n          const progress = Math.round((completed / total) * 100);\n          onProgress?.(progress);\n          resolve([challenge.salt, challenge.target, nonce]);\n        } else {\n          reject(new Error(error || 'Failed to solve challenge'));\n        }\n      };\n\n      worker.onerror = (error) => {\n        clearTimeout(timeout);\n        reject(new Error(`Worker error: ${error.message}`));\n      };\n\n      worker.postMessage({\n        salt: challenge.salt,\n        target: challenge.target,\n        wasmUrl\n      });\n    });\n  };\n\n  try {\n    // Process challenges in batches\n    for (let i = 0; i < challenges.length; i += workers.length) {\n      const batch = challenges.slice(i, i + workers.length);\n      const batchResults = await Promise.all(\n        batch.map((challenge, index) => solveSingleChallenge(challenge, index))\n      );\n      results.push(...batchResults);\n    }\n\n    return results;\n  } finally {\n    // Clean up workers\n    workers.forEach(worker => {\n      try {\n        worker.terminate();\n      } catch (error) {\n        console.error('Error terminating worker:', error);\n      }\n    });\n  }\n}\n", "import { ChallengeResponse, SolutionResponse, WaynChallenge } from '../types';\nimport { solveChallenges } from './worker';\n\ninterface WidgetState {\n  state: 'idle' | 'verifying' | 'verified' | 'error';\n  progress: number;\n  token: string | null;\n  error: string | null;\n}\n\ninterface WidgetI18n {\n  initialState: string;\n  verifying: string;\n  verified: string;\n  error: string;\n}\n\nexport class WaynWidget extends HTMLElement {\n  private shadow: ShadowRoot;\n  private container!: HTMLElement;\n  private resetTimer: number | null = null;\n  private isProcessing = false;\n  private state: WidgetState = {\n    state: 'idle',\n    progress: 0,\n    token: null,\n    error: null\n  };\n\n  // Default i18n texts\n  private i18n: WidgetI18n = {\n    initialState: \"I'm a human\",\n    verifying: 'Verifying...',\n    verified: \"You're a human\",\n    error: 'Error. Try again.'\n  };\n\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: 'open' });\n    this.setupWidget();\n  }\n\n  static get observedAttributes() {\n    return [\n      'api',\n      'color',\n      'worker-count',\n      'disabled',\n      'data-i18n-initial-state',\n      'data-i18n-verifying',\n      'data-i18n-verified',\n      'data-i18n-error'\n    ];\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'data-i18n-initial-state':\n        this.i18n.initialState = newValue || this.i18n.initialState;\n        break;\n      case 'data-i18n-verifying':\n        this.i18n.verifying = newValue || this.i18n.verifying;\n        break;\n      case 'data-i18n-verified':\n        this.i18n.verified = newValue || this.i18n.verified;\n        break;\n      case 'data-i18n-error':\n        this.i18n.error = newValue || this.i18n.error;\n        break;\n    }\n\n    this.updateUI();\n  }\n\n  connectedCallback() {\n    this.updateUI();\n    this.addEventListeners();\n  }\n\n  disconnectedCallback() {\n    this.cleanup();\n  }\n\n  private setupWidget() {\n    this.container = document.createElement('div');\n    this.container.className = 'wayn-widget';\n    \n    this.container.innerHTML = `\n      <div class=\"wayn-widget__content\">\n        <div class=\"wayn-widget__checkbox\"></div>\n        <span class=\"wayn-widget__text\">${this.i18n.initialState}</span>\n      </div>\n      \n      <a href=\"https://github.com/islemci/wayn\" \n         class=\"wayn-widget__credits\" \n         target=\"_blank\" \n         rel=\"noopener noreferrer\"\n         aria-label=\"Secured by Wayn\">\n        <span class=\"wayn-widget__credits-text\">Secured by&nbsp;</span>\n        Wayn\n      </a>\n      \n      <input type=\"hidden\" name=\"wayn-token\" value=\"\">\n    `;\n\n    this.injectStyles();\n    this.shadow.appendChild(this.container);\n  }\n\n  private injectStyles() {\n    const style = document.createElement('style');\n    style.textContent = `\n      /* Wayn Widget Styles */\n      .wayn-widget {\n        --wayn-background: #fdfdfd;\n        --wayn-border-color: #dddddd8f;\n        --wayn-border-radius: 14px;\n        --wayn-color: #212121;\n        --wayn-checkbox-size: 25px;\n        --wayn-checkbox-border: 1px solid #aaaaaad1;\n        --wayn-checkbox-border-radius: 6px;\n        --wayn-checkbox-background: #fafafa91;\n        --wayn-gap: 15px;\n        --wayn-widget-height: 30px;\n        --wayn-widget-width: 230px;\n        --wayn-widget-padding: 14px;\n        --wayn-spinner-color: #000;\n        --wayn-spinner-background-color: #eee;\n        --wayn-spinner-thickness: 5px;\n        --wayn-font: system, -apple-system, \"BlinkMacSystemFont\", \".SFNSText-Regular\", \"San Francisco\", \"Roboto\", \"Segoe UI\", \"Helvetica Neue\", \"Lucida Grande\", \"Ubuntu\", \"arial\", sans-serif;\n        \n        box-sizing: border-box;\n        background-color: var(--wayn-background);\n        border: 1px solid var(--wayn-border-color);\n        border-radius: var(--wayn-border-radius);\n        user-select: none;\n        height: var(--wayn-widget-height);\n        width: var(--wayn-widget-width);\n        display: flex;\n        align-items: center;\n        padding: var(--wayn-widget-padding);\n        gap: var(--wayn-gap);\n        cursor: pointer;\n        transition: filter 0.2s, transform 0.2s;\n        position: relative;\n        -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n        overflow: hidden;\n        color: var(--wayn-color);\n        font-family: var(--wayn-font);\n      }\n\n      .wayn-widget:hover {\n        filter: brightness(98%);\n      }\n\n      .wayn-widget:focus {\n        outline: 2px solid #0066cc;\n        outline-offset: 2px;\n      }\n\n      .wayn-widget--dark {\n        --wayn-background: #2d2d2d;\n        --wayn-border-color: #4a4a4a;\n        --wayn-color: #ffffff;\n        --wayn-checkbox-background: #404040;\n        --wayn-checkbox-border: 1px solid #666666;\n        --wayn-spinner-color: #ffffff;\n        --wayn-spinner-background-color: #555555;\n      }\n\n      .wayn-widget__content {\n        display: flex;\n        align-items: center;\n        gap: var(--wayn-gap);\n        flex: 1;\n      }\n\n      .wayn-widget__checkbox {\n        width: var(--wayn-checkbox-size);\n        height: var(--wayn-checkbox-size);\n        border: var(--wayn-checkbox-border);\n        border-radius: var(--wayn-checkbox-border-radius);\n        background-color: var(--wayn-checkbox-background);\n        transition: opacity 0.2s;\n        margin-top: 2px;\n        margin-bottom: 2px;\n        flex-shrink: 0;\n      }\n\n      .wayn-widget__text {\n        margin: 0;\n        font-weight: 500;\n        font-size: 15px;\n        user-select: none;\n        transition: opacity 0.2s;\n        font-family: var(--wayn-font);\n      }\n\n      .wayn-widget--verifying .wayn-widget__checkbox {\n        background: none;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transform: scale(1.1);\n        border: none;\n        border-radius: 50%;\n        background: conic-gradient(\n          var(--wayn-spinner-color) 0%, \n          var(--wayn-spinner-color) var(--progress, 0%), \n          var(--wayn-spinner-background-color) var(--progress, 0%), \n          var(--wayn-spinner-background-color) 100%\n        );\n        position: relative;\n      }\n\n      .wayn-widget--verifying .wayn-widget__checkbox::after {\n        content: \"\";\n        background-color: var(--wayn-background);\n        width: calc(100% - var(--wayn-spinner-thickness));\n        height: calc(100% - var(--wayn-spinner-thickness));\n        border-radius: 50%;\n        margin: calc(var(--wayn-spinner-thickness) / 2);\n      }\n\n      .wayn-widget--verified .wayn-widget__checkbox {\n        border: 1px solid transparent;\n        background-image: url(\"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%3E%3Cstyle%3E%40keyframes%20anim%7B0%25%7Bstroke-dashoffset%3A23.21320343017578px%7Dto%7Bstroke-dashoffset%3A0%7D%7D%3C%2Fstyle%3E%3Cpath%20fill%3D%22none%22%20stroke%3D%22%2300a67d%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20stroke-width%3D%222%22%20d%3D%22m5%2012%205%205L20%207%22%20style%3D%22stroke-dashoffset%3A0%3Bstroke-dasharray%3A23.21320343017578px%3Banimation%3Aanim%20.5s%20ease%22%2F%3E%3C%2Fsvg%3E\");\n        background-size: cover;\n      }\n\n      .wayn-widget--verified {\n        cursor: default;\n      }\n\n      .wayn-widget--error .wayn-widget__checkbox {\n        border: 1px solid transparent;\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='96' height='96' viewBox='0 0 24 24'%3E%3Cpath fill='%23f55b50' d='M11 15h2v2h-2zm0-8h2v6h-2zm1-5C6.47 2 2 6.5 2 12a10 10 0 0 0 10 10a10 10 0 0 0 10-10A10 10 0 0 0 12 2m0 18a8 8 0 0 1-8-8a8 8 0 0 1 8-8a8 8 0 0 1 8 8a8 8 0 0 1-8 8'/%3E%3C/svg%3E\");\n        background-size: cover;\n      }\n\n      .wayn-widget--error {\n        cursor: pointer;\n      }\n\n      .wayn-widget__credits {\n        position: absolute;\n        bottom: 10px;\n        right: 10px;\n        font-size: 12px;\n        color: var(--wayn-color);\n        opacity: 0.8;\n        text-decoration: none;\n        font-family: var(--wayn-font);\n      }\n\n      .wayn-widget__credits:hover {\n        opacity: 1;\n      }\n\n      .wayn-widget__credits-text {\n        display: none;\n        text-decoration: underline;\n      }\n\n      .wayn-widget__credits:hover .wayn-widget__credits-text {\n        display: inline-block;\n      }\n\n      .wayn-widget[aria-disabled=\"true\"] {\n        cursor: not-allowed;\n        opacity: 0.6;\n      }\n\n      .wayn-widget--verifying {\n        cursor: progress;\n      }\n\n      @media (max-width: 480px) {\n        .wayn-widget {\n          --wayn-widget-width: 200px;\n          --wayn-widget-padding: 12px;\n        }\n        \n        .wayn-widget__text {\n          font-size: 14px;\n        }\n      }\n\n      @media (prefers-contrast: high) {\n        .wayn-widget {\n          --wayn-border-color: #000000;\n          --wayn-checkbox-border: 2px solid #000000;\n        }\n        \n        .wayn-widget--dark {\n          --wayn-border-color: #ffffff;\n          --wayn-checkbox-border: 2px solid #ffffff;\n        }\n      }\n\n      @media (prefers-reduced-motion: reduce) {\n        .wayn-widget,\n        .wayn-widget__checkbox,\n        .wayn-widget__text {\n          transition: none;\n        }\n      }\n    `;\n    this.shadow.appendChild(style);\n  }\n\n  private addEventListeners() {\n    this.container.addEventListener('click', this.handleClick.bind(this));\n    this.container.addEventListener('keydown', this.handleKeyDown.bind(this));\n    \n    // Prevent credits link from triggering widget\n    const creditsLink = this.container.querySelector('.wayn-widget__credits') as HTMLElement;\n    creditsLink.addEventListener('click', (e) => {\n      e.stopPropagation();\n    });\n  }\n\n  private handleClick() {\n    if (this.canInteract()) {\n      this.solve();\n    }\n  }\n\n  private handleKeyDown(event: KeyboardEvent) {\n    if ((event.key === 'Enter' || event.key === ' ') && this.canInteract()) {\n      event.preventDefault();\n      this.solve();\n    }\n  }\n\n  private canInteract(): boolean {\n    return !this.isProcessing && \n           !this.hasAttribute('disabled') && \n           (this.state.state === 'idle' || this.state.state === 'error');\n  }\n\n  private async solve() {\n    if (this.isProcessing) return;\n\n    const api = this.getAttribute('api');\n    if (!api) {\n      this.handleError('API endpoint is required');\n      return;\n    }\n\n    this.isProcessing = true;\n    \n    try {\n      this.setState({\n        state: 'verifying',\n        progress: 0,\n        token: null,\n        error: null\n      });\n\n      // Request challenge\n      const challengeResponse = await fetch(`${api}/challenge`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!challengeResponse.ok) {\n        throw new Error(`Failed to get challenge: ${challengeResponse.statusText}`);\n      }\n\n      const challengeData: ChallengeResponse = await challengeResponse.json();\n\n      // Solve challenges\n      const workerCount = parseInt(this.getAttribute('worker-count') || '') || navigator.hardwareConcurrency || 4;\n      const solutions = await solveChallenges(\n        challengeData.challenge,\n        workerCount,\n        this.handleProgress.bind(this)\n      );\n\n      // Submit solutions\n      const solutionResponse = await fetch(`${api}/verify`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: challengeData.token,\n          solutions\n        })\n      });\n\n      if (!solutionResponse.ok) {\n        throw new Error(`Failed to verify solution: ${solutionResponse.statusText}`);\n      }\n\n      const solutionData: SolutionResponse = await solutionResponse.json();\n\n      if (!solutionData.success) {\n        throw new Error('Solution verification failed');\n      }\n\n      // Success\n      this.setState({\n        state: 'verified',\n        progress: 100,\n        token: solutionData.token,\n        error: null\n      });\n\n      this.dispatchEvent(new CustomEvent('wayn:solve', {\n        detail: { token: solutionData.token },\n        bubbles: true\n      }));\n\n      // Set up auto-reset based on expiration\n      if (solutionData.expires) {\n        const expiresIn = new Date(solutionData.expires).getTime() - Date.now();\n        if (expiresIn > 0 && expiresIn < 24 * 60 * 60 * 1000) {\n          this.resetTimer = window.setTimeout(() => this.reset(), expiresIn);\n        }\n      }\n\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n      this.handleError(errorMessage);\n    } finally {\n      this.isProcessing = false;\n    }\n  }\n\n  private handleProgress(progress: number) {\n    this.setState({\n      ...this.state,\n      progress\n    });\n\n    this.dispatchEvent(new CustomEvent('wayn:progress', {\n      detail: { progress },\n      bubbles: true\n    }));\n  }\n\n  private handleError(error: string) {\n    this.setState({\n      state: 'error',\n      progress: 0,\n      token: null,\n      error\n    });\n\n    this.dispatchEvent(new CustomEvent('wayn:error', {\n      detail: { error },\n      bubbles: true\n    }));\n  }\n\n  private setState(newState: Partial<WidgetState>) {\n    this.state = { ...this.state, ...newState };\n    this.updateUI();\n  }\n\n  private updateUI() {\n    const color = this.getAttribute('color') || 'light';\n    const disabled = this.hasAttribute('disabled');\n    \n    this.container.className = `wayn-widget wayn-widget--${color} wayn-widget--${this.state.state}`;\n    \n    if (disabled) {\n      this.container.setAttribute('aria-disabled', 'true');\n    } else {\n      this.container.removeAttribute('aria-disabled');\n    }\n\n    // Update text\n    const textElement = this.container.querySelector('.wayn-widget__text') as HTMLElement;\n    if (textElement) {\n      switch (this.state.state) {\n        case 'verifying':\n          textElement.textContent = `${this.i18n.verifying} ${this.state.progress}%`;\n          break;\n        case 'verified':\n          textElement.textContent = this.i18n.verified;\n          break;\n        case 'error':\n          textElement.textContent = this.i18n.error;\n          break;\n        default:\n          textElement.textContent = this.i18n.initialState;\n      }\n    }\n\n    // Update progress\n    if (this.state.state === 'verifying') {\n      const checkboxElement = this.container.querySelector('.wayn-widget__checkbox') as HTMLElement;\n      if (checkboxElement) {\n        checkboxElement.style.setProperty('--progress', `${this.state.progress}%`);\n      }\n    }\n\n    // Update hidden input\n    const hiddenInput = this.container.querySelector('input[name=\"wayn-token\"]') as HTMLInputElement;\n    if (hiddenInput) {\n      hiddenInput.value = this.state.token || '';\n    }\n\n    // Update aria-label\n    this.container.setAttribute('aria-label', this.getAriaLabel());\n    this.container.setAttribute('role', 'button');\n    this.container.setAttribute('tabindex', disabled ? '-1' : '0');\n  }\n\n  private getAriaLabel(): string {\n    switch (this.state.state) {\n      case 'verifying':\n        return `Verifying you're a human, ${this.state.progress}% complete`;\n      case 'verified':\n        return \"We have verified you're a human, you may now continue\";\n      case 'error':\n        return 'An error occurred, click to try again';\n      default:\n        return \"Click to verify you're a human\";\n    }\n  }\n\n  private reset() {\n    if (this.resetTimer) {\n      window.clearTimeout(this.resetTimer);\n      this.resetTimer = null;\n    }\n\n    this.setState({\n      state: 'idle',\n      progress: 0,\n      token: null,\n      error: null\n    });\n\n    this.dispatchEvent(new CustomEvent('wayn:reset', {\n      bubbles: true\n    }));\n  }\n\n  private cleanup() {\n    if (this.resetTimer) {\n      window.clearTimeout(this.resetTimer);\n      this.resetTimer = null;\n    }\n  }\n\n  // Public API\n  public get token(): string | null {\n    return this.state.token;\n  }\n\n  public get isVerified(): boolean {\n    return this.state.state === 'verified';\n  }\n\n  public resetWidget(): void {\n    this.reset();\n  }\n}\n"],
  "mappings": "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",
  "names": ["core_exports", "__export", "Wayn", "WaynWidget", "createWorker", "workerScript", "blob", "solveChallenges", "challenges", "workerCount", "onProgress", "wasmUrl", "workers", "results", "completed", "total", "i", "solveSingleChallenge", "challenge", "workerId", "resolve", "reject", "worker", "timeout", "event", "found", "nonce", "error", "progress", "batch", "batchResults", "index", "WaynWidget", "name", "oldValue", "newValue", "style", "e", "event", "api", "challengeResponse", "challengeData", "workerCount", "solutions", "solveChallenges", "solutionResponse", "solutionData", "expiresIn", "error", "errorMessage", "progress", "newState", "color", "disabled", "textElement", "checkboxElement", "hiddenInput", "WaynWidget", "Wayn", "config", "callback", "event", "WaynWidget"]
}
